-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP DATABASE IF EXISTS `bank_solvd` ;
CREATE DATABASE `bank_solvd`;
USE `bank_solvd` ;


CREATE TABLE `CREDIT_SUMMARY` (
  `CREDIT_SUMMARY_ID` INT NOT NULL AUTO_INCREMENT,
  `SALARY` DOUBLE NULL,
  `PATRIMONY` DOUBLE NULL,
  `CREDIT_TAKEN` TINYINT(1) NULL,
  PRIMARY KEY (`CREDIT_SUMMARY_ID`)
 );

CREATE TABLE`BANK_BRANCH_OFFICE` (
  `OFFICE_ID` INT NOT NULL AUTO_INCREMENT,
  `GENERAL_BALANCE` DOUBLE NULL,
  `ADDRESS` VARCHAR(255) NULL,
  `COUNTRY` VARCHAR(255) NULL,
  PRIMARY KEY (`OFFICE_ID`)
  );

CREATE TABLE `CREDIT_CARD` (
  `CREDIT_CARD_ID` INT NOT NULL AUTO_INCREMENT,
  `LIMIT_IN_1_DUE` DOUBLE NULL,
  `LIMIT_IN_DUES` DOUBLE NULL,
  `EXPIRATION_DATE` VARCHAR(255) NULL,
  `SECURITY_CODE` INT NULL,
  `PROVIDER` VARCHAR(255) NULL,
  PRIMARY KEY (`CREDIT_CARD_ID`)
    );

CREATE TABLE `DEBIT_CARD` (
  `DEBIT_CARD_ID` INT NOT NULL AUTO_INCREMENT,
  `EXPIRATION_DATE` VARCHAR(255) NULL,
  `SECURITY_CODE` INT NULL,
  `PROVIDER` VARCHAR(255) NULL,
  PRIMARY KEY (`DEBIT_CARD_ID`)
   );

   CREATE TABLE `CHECKING_ACCOUNT` (
     `CHECKING_ACCOUNT_ID` INT NOT NULL AUTO_INCREMENT,
     `CHECKS` INT NULL,
     `BALANCE` DOUBLE NULL,
	 `CREDIT_CARD_ID` INT NULL,
	 `DEBIT_CARD_ID` INT NULL,
     PRIMARY KEY (`CHECKING_ACCOUNT_ID`),
     CONSTRAINT `fk_CREDIT_CARD_ID1`
     	FOREIGN KEY (`CREDIT_CARD_ID`) REFERENCES `CREDIT_CARD` (`CREDIT_CARD_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION,
	 CONSTRAINT `fk_DEBIT_CARD_ID1`
	    FOREIGN KEY (`DEBIT_CARD_ID`) REFERENCES `DEBIT_CARD` (`DEBIT_CARD_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION
       );


CREATE TABLE`SAVING_ACCOUNT` (
  `SAVING_ACCOUNT_ID` INT NOT NULL AUTO_INCREMENT,
  `MONTH_WITHDRAWALS` INT NULL,
  `BALANCE` DOUBLE NULL,
  PRIMARY KEY (`SAVING_ACCOUNT_ID`)
    );

CREATE TABLE `CERTIFICATE_DEPOSIT_ACCOUNT` (
  `CERTIFICATE_DEPOSIT_ACCOUNT_ID` INT NOT NULL AUTO_INCREMENT,
  `START_DATE` VARCHAR(255) NULL,
  `FINISH_DATE` VARCHAR(255) NULL,
  `INTEREST_RATE` DOUBLE NULL,
  `BALANCE` DOUBLE NULL,
  PRIMARY KEY (`CERTIFICATE_DEPOSIT_ACCOUNT_ID`)
    );


CREATE TABLE `ATM` (
  `ATM_ID` INT NOT NULL AUTO_INCREMENT,
  `BALANCE` DOUBLE NULL,
  `OFFICE_ID` INT NULL,
  PRIMARY KEY (`ATM_ID`),
  CONSTRAINT `fk_OFFICE_ID2`
    FOREIGN KEY (`OFFICE_ID`) REFERENCES `BANK_BRANCH_OFFICE` (`OFFICE_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION
    );
    
    CREATE TABLE `HOMEBANKING` (
      `HOMEBANKING_ID` INT NOT NULL AUTO_INCREMENT,
      `USERNAME` VARCHAR(255) NULL,
      `PASSWORD` VARCHAR(255) NULL,
      PRIMARY KEY (`HOMEBANKING_ID`)
      );

CREATE TABLE `CLIENT` (
  `CLIENT_ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(255) NULL,
  `SURNAME` VARCHAR(255) NULL,
  `AGE`	 INT,
  `COUNTRY` VARCHAR(255) NULL,
  `ADDRESS` VARCHAR(255) NULL,
  `CREDIT_SUMMARY_ID` INT NOT NULL,
  `CERTIFICATE_DEPOSIT_ACCOUNT_ID` INT NULL,
  `SAVING_ACCOUNT_ID` INT NULL,
  `CHECKING_ACCOUNT_ID` INT NULL,
  `OFFICE_ID` INT NOT NULL,
  `HOMEBANKING_ID` INT NULL,
  PRIMARY KEY (`CLIENT_ID`),
  CONSTRAINT `fk_CREDIT_SUMMARY_ID1`
      FOREIGN KEY (`CREDIT_SUMMARY_ID`) REFERENCES `CREDIT_SUMMARY` (`CREDIT_SUMMARY_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_CERTIFICATE_DEPOSIT_ACCOUNT_ID1`
      FOREIGN KEY (`CERTIFICATE_DEPOSIT_ACCOUNT_ID`) REFERENCES `CERTIFICATE_DEPOSIT_ACCOUNT` (`CERTIFICATE_DEPOSIT_ACCOUNT_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_SAVING_ACCOUNT_ID1`
        FOREIGN KEY (`SAVING_ACCOUNT_ID`) REFERENCES `SAVING_ACCOUNT` (`SAVING_ACCOUNT_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_CHECKING_ACCOUNT_ID1`
          FOREIGN KEY (`CHECKING_ACCOUNT_ID`) REFERENCES `CHECKING_ACCOUNT` (`CHECKING_ACCOUNT_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_OFFICE_ID1`
      FOREIGN KEY (`OFFICE_ID`) REFERENCES `BANK_BRANCH_OFFICE` (`OFFICE_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT `fk_HOMEBANKING_ID1`
      FOREIGN KEY (`HOMEBANKING_ID`) REFERENCES `HOMEBANKING` (`HOMEBANKING_ID`)ON DELETE NO ACTION ON UPDATE NO ACTION
   );




