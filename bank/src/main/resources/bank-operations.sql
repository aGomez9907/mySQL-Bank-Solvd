-- INSERTION


INSERT INTO `CLIENT` (`NAME`, `SURNAME`,`AGE`, `COUNTRY`,  `ADDRESS`) VALUES ("GERARD", "GUTIERREZ", 25, "BOLIVIA", "MITRE 330");
INSERT INTO `CLIENT` (`NAME`, `SURNAME`,`AGE`) VALUES ("ROMINA", "GARRIDO", 40);
INSERT INTO `CLIENT` (`NAME`, `SURNAME`,`AGE`) VALUES ("MARTA", "GARROTE", 38);
INSERT INTO `CLIENT` (`NAME`, `SURNAME`,`AGE`, `COUNTRY`,  `ADDRESS`) VALUES ("MARK", "ZUCKERBERG", 20, "US", "FAKE ST. 123");

INSERT INTO `CREDIT_SUMMARY` (`CLIENT_ID`, `SALARY`, `PATRIMONY`, `CREDIT_TAKEN`) VALUES (1, 1000, 500000, 0);
INSERT INTO `CREDIT_SUMMARY` (`CLIENT_ID`, `SALARY`, `PATRIMONY`, `CREDIT_TAKEN`) VALUES (2, 1800, 90000, 1);
INSERT INTO `CREDIT_SUMMARY` (`CLIENT_ID`, `SALARY`, `PATRIMONY`, `CREDIT_TAKEN`) VALUES (3, 1200, 95000, 0);

INSERT INTO `BANK_BRANCH_OFFICE` ( `OFFICE_ID` ,`GENERAL_BALANCE`, `ADDRESS` ,`COUNTRY`) VALUES (1, 400000, "9 DE JULIO 2580", "ARGENTINA");
INSERT INTO `BANK_BRANCH_OFFICE` ( `OFFICE_ID` ,`GENERAL_BALANCE`, `ADDRESS` ,`COUNTRY`) VALUES (2, 4000, "OCAMPO 250", "BOLIVIA");
INSERT INTO `BANK_BRANCH_OFFICE` ( `OFFICE_ID` ,`GENERAL_BALANCE`, `ADDRESS` ,`COUNTRY`) VALUES (3, 666000, "NICARAGUA 230", "ARGENTINA");
INSERT INTO `BANK_BRANCH_OFFICE` ( `OFFICE_ID` ,`GENERAL_BALANCE`, `ADDRESS` ,`COUNTRY`) VALUES (4, 300100, "CARABOBO 230", "ARGENTINA");
INSERT INTO `BANK_BRANCH_OFFICE` ( `OFFICE_ID` ,`GENERAL_BALANCE`, `ADDRESS` ,`COUNTRY`) VALUES (5, 23000, "OCA 250", "BOLIVIA");
INSERT INTO `BANK_BRANCH_OFFICE` ( `OFFICE_ID` ,`GENERAL_BALANCE`, `ADDRESS` ,`COUNTRY`) VALUES (6, 230030, "CAMPO 250", "BOLIVIA");

INSERT INTO `ACCOUNTS_MAIN_TABLE`(`CLIENT_ID`, `CHECKING_ACCOUNT_ID` ,`BALANCE` ,`OFFICE_ID`) VALUES(1, 1, 10000, 1);
INSERT INTO `ACCOUNTS_MAIN_TABLE`(`CLIENT_ID`, `SAVING_ACCOUNT_ID` ,`BALANCE` ,`OFFICE_ID`) VALUES(2, 1, 30000, 1);
INSERT INTO `ACCOUNTS_MAIN_TABLE`(`CLIENT_ID`, `SAVING_ACCOUNT_ID` ,`BALANCE` ,`OFFICE_ID`) VALUES(3, 2, 30000, 1);
INSERT INTO `ACCOUNTS_MAIN_TABLE`(`CLIENT_ID`, `SAVING_ACCOUNT_ID` ,`BALANCE` ,`OFFICE_ID`) VALUES(1, 3, 10000, 1);
INSERT INTO `ACCOUNTS_MAIN_TABLE`(`CLIENT_ID`, `SAVING_ACCOUNT_ID` ,`BALANCE` ,`OFFICE_ID`) VALUES(4, 4, 1000, 1);

INSERT INTO `SAVING_ACCOUNT` (`MONTH_WITHDRAWALS`, `SAVING_ACCOUNT_ID`) VALUES (2, 1);
INSERT INTO `CHECKING_ACCOUNT` (`CHECKS`, `CHECKING_ACCOUNT_ID`) VALUES (10, 1);
INSERT INTO `SAVING_ACCOUNT` (`MONTH_WITHDRAWALS`, `SAVING_ACCOUNT_ID`) VALUES (5, 2);

INSERT INTO `HOMEBANKING`(`CLIENT_ID`,`USERNAME`, `PASSWORD`) VALUES (1 , "GGUTIERREZ", "GugER222333");
INSERT INTO `HOMEBANKING`(`CLIENT_ID`,`USERNAME`, `PASSWORD`) VALUES (4 , "MMZCK", "MARK123");

-- UPDATES

UPDATE `CLIENT` SET `COUNTRY` = "ITALIA" WHERE `CLIENT_ID` = 2;
UPDATE `CLIENT` SET `ADDRESS` = "TRELLES 1330" WHERE `CLIENT_ID` = 2;

UPDATE `CREDIT_SUMMARY` SET `SALARY` = 4000 WHERE `CLIENT_ID` = 2;
UPDATE `CREDIT_SUMMARY` SET `CREDIT_TAKEN` = 1 WHERE `CLIENT_ID` = 1;

UPDATE `BANK_BRANCH_OFFICE` SET `GENERAL_BALANCE` = 350000 WHERE `OFFICE_ID`= 1;

UPDATE `ACCOUNTS_MAIN_TABLE` SET `BALANCE` = 9500 WHERE `SAVING_ACCOUNT_ID`= 3 AND `CLIENT_ID`=1;
UPDATE `ACCOUNTS_MAIN_TABLE` SET `BALANCE` = 25000 WHERE `SAVING_ACCOUNT_ID`= 1 AND `CLIENT_ID` = 2;

UPDATE `SAVING_ACCOUNT` SET `MONTH_WITHDRAWALS` = 3 WHERE `SAVING_ACCOUNT_ID` = 1;
UPDATE `CHECKING_ACCOUNT` SET `CHECKS` = 9 WHERE `CHECKING_ACCOUNT_ID` = 1;

UPDATE `HOMEBANKING` SET `PASSWORD` = "GugER22563" WHERE `CLIENT_ID` = 1;

-- DELETES
SET FOREIGN_KEY_CHECKS=0;
DELETE FROM `CLIENT` WHERE `CLIENT_ID` = 3;
DELETE FROM `CLIENT` WHERE `CLIENT_ID` = 2;
DELETE FROM `BANK_BRANCH_OFFICE` WHERE `OFFICE_ID`= 2;
DELETE FROM `BANK_BRANCH_OFFICE` WHERE `OFFICE_ID`= 3;
DELETE FROM `CREDIT_SUMMARY` WHERE `CLIENT_ID` = 3;
DELETE FROM `CREDIT_SUMMARY` WHERE `CLIENT_ID` = 2;
DELETE FROM `ACCOUNTS_MAIN_TABLE` WHERE `ACCOUNT_ID` = 3;
DELETE FROM `ACCOUNTS_MAIN_TABLE` WHERE `ACCOUNT_ID` = 2;
DELETE FROM `SAVING_ACCOUNT` WHERE `SAVING_ACCOUNT_ID` = 2;
DELETE FROM `CHECKING_ACCOUNT` WHERE `CHECKING_ACCOUNT_ID` = 1;

-- ALTER TABLE

ALTER TABLE `DEBIT_CARD`
MODIFY `EXPIRATION_DATE` DATE;

ALTER TABLE `CREDIT_CARD`
ADD COLUMN `HAS CHIP`  TINYINT(1);

ALTER TABLE `CREDIT_CARD`
DROP COLUMN `HAS CHIP`;

ALTER TABLE `HOMEBANKING`
MODIFY `USERNAME` VARCHAR(200);

-- big statement

SELECT  `ACCOUNT_ID`, ACCOUNTS_MAIN_TABLE.CLIENT_ID,  ACCOUNTS_MAIN_TABLE.CERTIFICATE_DEPOSIT_ACCOUNT_ID, ACCOUNTS_MAIN_TABLE.SAVING_ACCOUNT_ID, ACCOUNTS_MAIN_TABLE.CHECKING_ACCOUNT_ID, ACCOUNTS_MAIN_TABLE.OFFICE_ID
FROM `ACCOUNTS_MAIN_TABLE`
INNER JOIN `CLIENT`
ON CLIENT.CLIENT_ID = ACCOUNTS_MAIN_TABLE.CLIENT_ID
INNER JOIN `CERTIFICATE_DEPOSIT_ACCOUNT`
ON CERTIFICATE_DEPOSIT_ACCOUNT.CERTIFICATE_DEPOSIT_ACCOUNT_ID = ACCOUNTS_MAIN_TABLE.CERTIFICATE_DEPOSIT_ACCOUNT_ID
INNER JOIN `SAVING_ACCOUNT`
ON SAVING_ACCOUNT.SAVING_ACCOUNT_ID = ACCOUNTS_MAIN_TABLE.SAVING_ACCOUNT_ID
INNER JOIN `CHECKING_ACCOUNT`
ON CHECKING_ACCOUNT.CHECKING_ACCOUNT_ID = ACCOUNTS_MAIN_TABLE.CHECKING_ACCOUNT_ID
INNER JOIN `BANK_BRANCH_OFFICE`
ON BANK_BRANCH_OFFICE.OFFICE_ID = ACCOUNTS_MAIN_TABLE.OFFICE_ID;

-- left, right, inner and outer joins

SELECT ACCOUNTS_MAIN_TABLE.*, CLIENT.*
FROM ACCOUNTS_MAIN_TABLE
LEFT JOIN CLIENT ON ACCOUNTS_MAIN_TABLE.CLIENT_ID = CLIENT.CLIENT_ID;

SELECT ACCOUNTS_MAIN_TABLE.*, DEBIT_CARD.*
FROM DEBIT_CARD
RIGHT JOIN ACCOUNTS_MAIN_TABLE ON DEBIT_CARD.ACCOUNT_ID = ACCOUNTS_MAIN_TABLE.ACCOUNT_ID;

SELECT ACCOUNTS_MAIN_TABLE.BALANCE, ACCOUNTS_MAIN_TABLE.ACCOUNT_ID , CLIENT.*
FROM ACCOUNTS_MAIN_TABLE
INNER JOIN CLIENT ON ACCOUNTS_MAIN_TABLE.CLIENT_ID = CLIENT.CLIENT_ID;

SELECT HOMEBANKING.USERNAME, CLIENT.NAME, CLIENT.SURNAME
FROM CLIENT
INNER JOIN HOMEBANKING ON HOMEBANKING.CLIENT_ID = CLIENT.CLIENT_ID;

-- aggregate functions and group by and without having.

SELECT CLIENT.CLIENT_ID, COUNT(ACCOUNTS_MAIN_TABLE.CLIENT_ID) AS TotalAccountsPerCLIENT
FROM ACCOUNTS_MAIN_TABLE
JOIN CLIENT ON ACCOUNTS_MAIN_TABLE.CLIENT_ID = CLIENT.CLIENT_ID
GROUP BY CLIENT.CLIENT_ID;

SELECT  SUM(ACCOUNTS_MAIN_TABLE.BALANCE) AS TotalBalance
FROM ACCOUNTS_MAIN_TABLE
GROUP BY ACCOUNTS_MAIN_TABLE.OFFICE_ID;

SELECT CLIENT.CLIENT_ID, SUM(ACCOUNTS_MAIN_TABLE.BALANCE) AS TotalBalancePerCLIENT
FROM ACCOUNTS_MAIN_TABLE
JOIN CLIENT ON ACCOUNTS_MAIN_TABLE.CLIENT_ID = CLIENT.CLIENT_ID
GROUP BY CLIENT.CLIENT_ID;

SELECT BANK_BRANCH_OFFICE.COUNTRY, AVG(BANK_BRANCH_OFFICE.GENERAL_BALANCE) AS AverageBalancePerCOUNTRY
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY;

SELECT BANK_BRANCH_OFFICE.COUNTRY, MIN(BANK_BRANCH_OFFICE.GENERAL_BALANCE) AS MinimumBalancePerCOUNTRY
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY;

SELECT BANK_BRANCH_OFFICE.COUNTRY, MAX(BANK_BRANCH_OFFICE.GENERAL_BALANCE) AS MaximumBalancePerCOUNTRY
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY;

SELECT BANK_BRANCH_OFFICE.COUNTRY, COUNT(BANK_BRANCH_OFFICE.OFFICE_ID) AS OfficesPerCountry
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY;

-- aggregate functions and group by and with having.
SELECT CLIENT.CLIENT_ID, COUNT(ACCOUNTS_MAIN_TABLE.CLIENT_ID) AS TotalAccountsPerCLIENT
FROM ACCOUNTS_MAIN_TABLE
JOIN CLIENT ON ACCOUNTS_MAIN_TABLE.CLIENT_ID = CLIENT.CLIENT_ID
GROUP BY CLIENT.CLIENT_ID
HAVING CLIENT.CLIENT_ID < 3;

SELECT CLIENT.CLIENT_ID, SUM(ACCOUNTS_MAIN_TABLE.BALANCE) AS TotalBalancePerCLIENT
FROM ACCOUNTS_MAIN_TABLE
JOIN CLIENT ON ACCOUNTS_MAIN_TABLE.CLIENT_ID = CLIENT.CLIENT_ID
GROUP BY CLIENT.CLIENT_ID
HAVING TotalBalancePerCLIENT<10000;

SELECT BANK_BRANCH_OFFICE.COUNTRY, AVG(BANK_BRANCH_OFFICE.GENERAL_BALANCE) AS AverageBalancePerCOUNTRY
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY
HAVING AverageBalancePerCOUNTRY > 150000;

SELECT BANK_BRANCH_OFFICE.COUNTRY, MIN(BANK_BRANCH_OFFICE.GENERAL_BALANCE) AS MinimumBalancePerCOUNTRY
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY
HAVING BANK_BRANCH_OFFICE.COUNTRY = "ARGENTINA";

SELECT BANK_BRANCH_OFFICE.COUNTRY, MIN(BANK_BRANCH_OFFICE.GENERAL_BALANCE) AS MinimumBalancePerCOUNTRY
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY
HAVING BANK_BRANCH_OFFICE.COUNTRY = "PERU";

SELECT BANK_BRANCH_OFFICE.COUNTRY, MAX(BANK_BRANCH_OFFICE.GENERAL_BALANCE) AS MaximumBalancePerCOUNTRY
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY
HAVING BANK_BRANCH_OFFICE.COUNTRY = "BOLIVIA";

SELECT BANK_BRANCH_OFFICE.COUNTRY, COUNT(BANK_BRANCH_OFFICE.OFFICE_ID) AS OfficesPerCountry
FROM BANK_BRANCH_OFFICE
GROUP BY BANK_BRANCH_OFFICE.COUNTRY
HAVING OfficesPerCountry < 3;


